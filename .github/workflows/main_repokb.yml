# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js project to Azure Function App - repokb (Corrected)

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  # Set this to the directory containing your package.json where you run 'npm install' and build
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  # Set this to the node version your Function App uses in Azure
  NODE_VERSION: '20.x' # Updated Node version as 22.x might not be fully available/stable everywhere yet, adjust if needed.
  # Define the specific output directory from your build
  BUILD_OUTPUT_DIR: '.mastra/output'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read #This is required for actions/checkout

    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4

      - name: Setup Node ${{ env.NODE_VERSION }} Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: 'Resolve Project Dependencies and Build'
        shell: bash
        # Run commands within the function app's source directory
        working-directory: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}
        run: |
          npm install
          # Assuming 'npm run build' is the command that runs 'npx mastra build' or similar
          # If not, replace 'npm run build' with 'npx mastra build'
          npm run build
          # Verify output directory exists
          if [ ! -d "${{ env.BUILD_OUTPUT_DIR }}" ]; then
             echo "Build output directory '${{ env.BUILD_OUTPUT_DIR }}' not found!"
             exit 1
          fi

      - name: Zip artifact for deployment
        shell: bash
        run: |
          SOURCE_DIR="${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/${{ env.BUILD_OUTPUT_DIR }}"
          OUTPUT_ZIP="release.zip"
          echo "Zipping contents of '$SOURCE_DIR' into '$OUTPUT_ZIP'"
          # Change into the source directory
          pushd "$SOURCE_DIR" || exit 1
          # Zip the *contents* of the current directory (.)
          zip ../../"$OUTPUT_ZIP" . -r
          # Go back to the original directory
          popd

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip # Upload the correctly zipped file

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: Production # Optional: Define environment if needed
    permissions:
      id-token: write # This is required for requesting the JWT via azure/login
      # contents: read # Typically not needed when deploying a package

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app # Must match the upload name

      # --- REMOVED Unzip step ---

      - name: Login to Azure
        uses: azure/login@v2
        with:
          # Use your actual secret names
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: 'Deploy to Azure Functions'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: 'repokb'
          # slot-name: 'Production' # Optional, defaults to production
          # --- CORRECTED package parameter ---
          package: release.zip # Deploy the downloaded zip file directly

      # Optional: Display Function App URL
      - name: Display Function App URL
        run: echo "Function App URL: ${{ steps.fa.outputs.app-url }}"
